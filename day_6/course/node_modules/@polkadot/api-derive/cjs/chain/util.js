"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAuthorDetails = exports.createBlockNumberDerive = void 0;
const rxjs_1 = require("rxjs");
const index_js_1 = require("../util/index.js");
function createBlockNumberDerive(fn) {
    return (instanceId, api) => (0, index_js_1.memo)(instanceId, () => fn(api).pipe((0, rxjs_1.map)(index_js_1.unwrapBlockNumber)));
}
exports.createBlockNumberDerive = createBlockNumberDerive;
function getAuthorDetails(header, queryAt) {
    // this is Moonbeam specific
    if (queryAt.authorMapping && queryAt.authorMapping.mappingWithDeposit) {
        const mapId = header.digest.logs[0] && ((header.digest.logs[0].isConsensus && header.digest.logs[0].asConsensus[1]) ||
            (header.digest.logs[0].isPreRuntime && header.digest.logs[0].asPreRuntime[1]));
        if (mapId) {
            return (0, rxjs_1.combineLatest)([
                (0, rxjs_1.of)(header),
                queryAt.session
                    ? queryAt.session.validators()
                    : (0, rxjs_1.of)(null),
                queryAt.authorMapping.mappingWithDeposit(mapId).pipe((0, rxjs_1.map)((opt) => opt.unwrapOr({ account: null }).account))
            ]);
        }
    }
    // normal operation, non-mapping
    return (0, rxjs_1.combineLatest)([
        (0, rxjs_1.of)(header),
        queryAt.session
            ? queryAt.session.validators()
            : (0, rxjs_1.of)(null),
        (0, rxjs_1.of)(null)
    ]);
}
exports.getAuthorDetails = getAuthorDetails;
