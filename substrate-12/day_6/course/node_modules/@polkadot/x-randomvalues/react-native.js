import { NativeModules } from 'react-native';
import { xglobal } from '@polkadot/x-global';
import { base64Decode } from './base64.js';
import { getRandomValues as getRandomValuesGlobal } from './browser.js';
import { insecureRandomValues } from './fallback.js';
export { packageInfo } from './packageInfo.js';
function getRandomValuesNative(output) {
    const bytes = base64Decode(NativeModules.RNGetRandomValues
        ? NativeModules.RNGetRandomValues.getRandomBase64(output.length)
        : NativeModules.ExpoRandom.getRandomBase64String(output.length));
    for (let i = 0; i < bytes.length; i++) {
        output[i] = bytes[i];
    }
    return output;
}
export const getRandomValues = (typeof xglobal.crypto === 'object' && typeof xglobal.crypto.getRandomValues === 'function'
    ? getRandomValuesGlobal
    : (typeof xglobal.nativeCallSyncHook === 'undefined' || !NativeModules.ExpoRandom)
        ? insecureRandomValues
        : getRandomValuesNative);
