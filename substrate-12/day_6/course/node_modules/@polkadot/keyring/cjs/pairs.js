"use strict";
var _Pairs_map;
Object.defineProperty(exports, "__esModule", { value: true });
exports.Pairs = void 0;
const tslib_1 = require("tslib");
const util_1 = require("@polkadot/util");
const util_crypto_1 = require("@polkadot/util-crypto");
class Pairs {
    constructor() {
        _Pairs_map.set(this, {});
    }
    add(pair) {
        tslib_1.__classPrivateFieldGet(this, _Pairs_map, "f")[(0, util_crypto_1.decodeAddress)(pair.address).toString()] = pair;
        return pair;
    }
    all() {
        return Object.values(tslib_1.__classPrivateFieldGet(this, _Pairs_map, "f"));
    }
    get(address) {
        const pair = tslib_1.__classPrivateFieldGet(this, _Pairs_map, "f")[(0, util_crypto_1.decodeAddress)(address).toString()];
        if (!pair) {
            throw new Error(`Unable to retrieve keypair '${(0, util_1.isU8a)(address) || (0, util_1.isHex)(address)
                ? (0, util_1.u8aToHex)((0, util_1.u8aToU8a)(address))
                : address}'`);
        }
        return pair;
    }
    remove(address) {
        delete tslib_1.__classPrivateFieldGet(this, _Pairs_map, "f")[(0, util_crypto_1.decodeAddress)(address).toString()];
    }
}
exports.Pairs = Pairs;
_Pairs_map = new WeakMap();
